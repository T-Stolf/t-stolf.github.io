css
:root{
    --blue: rgb(1, 40, 77);
}*{
    font-family: helvetica;
  }
  /* collector combinations, select for things with 2 classes or a class and an id, .header.name{} or #cube.id HTMP selectors can be used in any combination */
  /* having 2 selectors with the same properties can be written together using a comma as such .heavy, .weight{} including the comma and space*/
  /* position has different types: static, relative, absolute, fixed, and sticky. fixed keeps items in the spot on screen forever, whereas sticky attaches to a position on the screen.*/
  /* pseudoselectors are used to add more dynamic reactions to an element. to add them put a : after a class or id, then add a descriptor such as nth child or link / visited */
  /* sibling selectors "~" are used to denote a selector style that comes in an area with a sibling (meaning they are contained within a parent).  a ~ b { color: red;}  denotes any a following a sibling that is b is coloured red*/
  /* follow selectors "+" are used to denote a selector style that comes immediately after another selector. a + b {color:red;} denotes any a following a b is coloured red*/
  /* child selectors ">" are used to denote a selector style that applies to all children of a selector. a > b{color:red;} denotes any child b of a is coloured red */
  /* descendant selectors " " are used to denote a selector syle that applies to any descendant selector. a b {colour:red;} denotes any descendant of a named b is coloured red*/
  /* attribute selection can also be used to denote style. for example: a[class=something], div[id=dumb], img[src="temp.png"] all work to define specific items based on their attributes*/
  /* attribute selection can be very powerful for styling multiple items contained in the same location (ie photos) when using the "^" symbol as it changes the form from "equals" to "contains" img[src =^"\image\"] will affect all items in the file image  */
  /* attribute selectors can also contain: $-ends with, *-contains somewhere, ~-contains separated by whitespace, |-starts with, and ends with a "-" */
  /* background size and background repeat, exactly what you expect*/
  
body{
    display: grid;
    grid-template-rows: auto;
    grid-template-columns: auto;
    gap: 3%;

    align-items: space-between;
    justify-items: space-between;
    background: black;
    color: white;
    font-size: 3vw;
    font-family: Arial;
    margin: 0 0 0 0;
}
button
{
   
    border: solid rgb(158, 158, 158);
    border-width: 3px;
    border-radius: 5%;
    background: rgba(148, 146, 146, 0.76);
    font-size: 1em;
    transition: background 0.5s ease;

}
button:hover
{   
        border: solid rgb(197, 197, 197);
        background: rgba(190, 189, 189, 0.76);
}
ul
{
    list-style-type: none; 
    padding: 0 0 0 0;
} 
.colourTransparent
{
    background: rgba(161, 161, 161, 0.425) ;
    padding: 15px 15px 15px 15px;

}
.internalStuff
{
    display: grid;
    grid-template-columns: 1fr 2fr ;
    grid-template-rows: 1fr 1fr;
    gap: 3%;
    padding: 15px 10% 15px 10%;
    border-radius: 5%;
    justify-items: center;
    align-items: center;
} 
.meImage
{
    grid-area: 1 / 1 / span 2 / span 1;
    /* grid-area: picture; */
    width: 10vw;
    min-width: 100%;
    border: 3px solid rgb(41, 41, 41);
    border-radius: 30%;
}
.name
{   
    grid-area: 1 / 2 / span 1 / span 1;
    /* grid-area: name; */
    /* grid: 1 / 2 / span 1 /span 3; */
    font-size: 2.5em;
    font-weight: 600;
}
.occupation
{   
    grid-area: 2 / 2 / span 1 / span 1;
    font-size: 1.5em;
    font-weight: 600;

    border-top: 3px;
    border-bottom: 3px;
    border-left: 0px;
    border-right: 0px;
    border-style: solid;
}
.mainsection
{
    display: grid;
    grid-template-columns: 1fr 14fr 1fr;
    grid-template-rows: auto;
    justify-content: space-between;

    gap: 3%;

    /* margin: 0 3% 0 3%; */
    border-radius: 5%;

    justify-items: stretch;
    align-items: center;
}
.I1
{
    grid-area: 1 / 2 / span 1 / span 1;
    text-align: center;
}
.I2
{
    grid-area: 2 / 2 / span 1 / span 1;
    text-align: center;
}
.I3
{
    grid-area: 3 / 2 / span 1 / span 1;
    text-align: center;
}
.I4
{
    grid-area: 4 / 2 / span 1 / span 1;
    text-align: center;
}
.mainButtons
{
    font-weight: 600;
    border-radius: 3%;
}
.descriptor
{
    font-size: 1.3em;
    text-align: center;
    border-top: 0;
    border-right: 0;
    border-left: 0;
    border-bottom: 3px;
    border-style: solid;
    border-color: white;
}

.contactbar
{
    display: grid;
    grid-template-columns: 1fr 2fr 2fr 2fr;
    grid-template-rows: 1fr;
    gap: 3%;

    padding: 15px 3% 15px 3%;

    align-items: stretch; 
    justify-items: stretch;

    background: rgba(161, 161, 161, 0.425) ;
    padding: 15px 15px 15px 15px;
}
.contactname
{
    font-size: 1.3em;
    font-weight: 600;
}
.contactImg
{
    height: 80%;
    width: 80%;
}
.back 
{
    padding: 5% 5% 5% 5%;
    display: grid;
    justify-items: center;
    align-items: center;
}
.Type
{
    text-decoration: underline;
    font-size: 1.2em;
    font-weight:700;
}
.Location
{
    font-weight:700;
}
.TimePeriod
{
    font-weight:600;   
}
